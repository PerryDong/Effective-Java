用泛型编程的时候，会遇到许多的编译器警告：非受检强制转化警告(unchecked cast warning)、非受检方法调用警告、非受检普通数组创
建警告以及非受检转换警告(unchecked conversion warnings)。要尽可能的消除每一个非受检警告。如果消除了所有警告就可以确保代码是类型安全的。
如果无法消除警告，同时又可以证明引起警告的代码是类型安全的。可以用一个@SuppressWarnings("unchecked")注解来禁止这条警告。
SuppressWarnings注解可以用任何粒度的级别中，从单独的局部变量声名到整个类都是可以的。应该始终在尽可能小的范围内使用
SuppressWarnings注解。它通常是个变量声名或者是非常简短的方法或者构造器，永远不要在整个类上使用SuppressWarnings注解，这么做
很可能会掩盖了重要的警告。

如果发现要在长度不止一行的方法或构造器中使用SuppressWarnings注解，可以将它移到一个局部变量的声名中，虽然必要声名一个新的
局部变量，不过这么做还是值得的。SuppressWarnings注解方在return 语句中是非法的，每当使用SuppressWarnings注解的时候都应该添
加一条注释以说明为什么这么做是安全的，这样可以帮助其他人理解代码，更重要的是，可以尽量减少其他人修改代码后导致计算不安全
的概率。

总之，非受检警告很重要，不要忽略它们。每一条警告都表示可能在运行时抛出ClassCastException异常。要尽最大的努力去消除这些警告。
如果无法消除但是可以证明引起警告的代码是安全的，就可以在尽可能小的范围中，使用＠SuppressWarnings("unchecked")注解来禁止警告，
但是要把禁止的原因记录下来。