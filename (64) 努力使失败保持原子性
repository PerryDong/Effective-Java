  当对某个对象操作时抛出异常之后，通常我们期望这个对象仍然保持在一种定义良好的可用状态之中。因为调用者对象期望能从这种异常中进行恢复。一般而言，失败的对
  象操作方法应该使对象保持在被操作之前的状态。具有这种属性的方法称为具有失败原子性。
  实现这种效果的几种途径：
  1）设计不可变的对象,那么对象创建出来就不能被修改了，也不需要维护。
  2）在执行操作之前检查参数的有效性。在对象状态被修改之前，先抛出异常。
    类似做法：调整计算处理的过程，使得任何可能会失败的计算部分都在对象状态被修改之前发生。
  
  3）编写恢复代码，由其拦截操作过程中发生的失败，以及使对象回滚到操作开始之前的状态上。这样做并不提倡，因为错误代码编写遇到复杂的场景会很繁琐。
  4）在对象的一份临时拷贝上执行操作，操作完成后，在使用临时拷贝的的结果代替对象的内容。也就是备份操作。
